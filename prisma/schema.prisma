datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  admin
  manager
  customer
}

model Users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String?
  lastName  String?
  email     String   @unique
  role      UserRole @default(manager)
  password  String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  brands    Brands[]
}

model Brands {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  usersId     String?    @db.ObjectId
  name        String
  description String?
  updatedAt   DateTime   @updatedAt
  createdAt   DateTime   @default(now())
  user        Users?     @relation(fields: [usersId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Products    Products[]
}

model Options {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  title       String
  description String?
  values      String[]
  categoryIds String[]        @db.ObjectId
  updatedAt   DateTime        @updatedAt
  createdAt   DateTime        @default(now())
  Categories  Categories[]    @relation(fields: [categoryIds], references: [id])
  Values      VariantValues[]
}

model Categories {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  handle        String        @unique
  name          String
  title         String
  description   String?
  optionIds     String[]      @db.ObjectId
  collectionIds String[]      @db.ObjectId
  updatedAt     DateTime      @updatedAt
  createdAt     DateTime      @default(now())
  Options       Options[]     @relation(fields: [optionIds], references: [id])
  Collections   Collections[] @relation(fields: [collectionIds], references: [id])
  Products      Products[]
}

model Collections {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  handle      String       @unique
  name        String
  title       String
  description String?
  categoryIds String[]     @db.ObjectId
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
  Categories  Categories[] @relation(fields: [categoryIds], references: [id])
}

model Products {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  handle      String          @unique
  title       String
  description String?
  brandId     String          @db.ObjectId
  categoryId  String?         @db.ObjectId
  updatedAt   DateTime        @updatedAt
  createdAt   DateTime        @default(now())
  Brand       Brands          @relation(fields: [brandId], references: [id])
  Category    Categories?     @relation(fields: [categoryId], references: [id])
  Variants    Variants[]
  Images      ProductImages[]
}

model Variants {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  productId String          @db.ObjectId
  imageId   String?         @db.ObjectId
  updatedAt DateTime        @updatedAt
  createdAt DateTime        @default(now())
  Product   Products        @relation(fields: [productId], references: [id])
  Values    VariantValues[]
  Images    ProductImages?  @relation(fields: [imageId], references: [id])
}

model VariantValues {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  value     String
  variantId String   @db.ObjectId
  optionId  String   @db.ObjectId
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  Variant   Variants @relation(fields: [variantId], references: [id])
  Option    Options  @relation(fields: [optionId], references: [id])
}

model ProductImages {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  productId String     @db.ObjectId
  imageId   String     @db.ObjectId
  position  Int        @default(0)
  default   Boolean    @default(false)
  updatedAt DateTime   @updatedAt
  createdAt DateTime   @default(now())
  Product   Products   @relation(fields: [productId], references: [id])
  Image     Images     @relation(fields: [imageId], references: [id])
  Variants  Variants[]
}

model Images {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  src           String
  alt           String?
  updatedAt     DateTime        @updatedAt
  createdAt     DateTime        @default(now())
  ProductImages ProductImages[]
}

model Settings {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  mainMenu  Json
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
